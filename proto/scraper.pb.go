// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: scraper.proto

// protoc --go_out=plugins=grpc:. --go_opt=paths=source_relative scraper.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok string `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_scraper_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetOk() string {
	if x != nil {
		return x.Ok
	}
	return ""
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok string `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_scraper_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetOk() string {
	if x != nil {
		return x.Ok
	}
	return ""
}

type AppStoreRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CountryCode string `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Language    string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *AppStoreRoomRequest) Reset() {
	*x = AppStoreRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppStoreRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppStoreRoomRequest) ProtoMessage() {}

func (x *AppStoreRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppStoreRoomRequest.ProtoReflect.Descriptor instead.
func (*AppStoreRoomRequest) Descriptor() ([]byte, []int) {
	return file_scraper_proto_rawDescGZIP(), []int{2}
}

func (x *AppStoreRoomRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppStoreRoomRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *AppStoreRoomRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type AppStoreRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Link         string   `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Id           uint32   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	ContentIds   []uint32 `protobuf:"varint,4,rep,packed,name=content_ids,json=contentIds,proto3" json:"content_ids,omitempty"`
	ArtistName   string   `protobuf:"bytes,5,opt,name=artist_name,json=artistName,proto3" json:"artist_name,omitempty"`
	Rating       float32  `protobuf:"fixed32,6,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate  string   `protobuf:"bytes,7,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Subtitle     string   `protobuf:"bytes,8,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Description  string   `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Screenshot_1 string   `protobuf:"bytes,10,opt,name=screenshot_1,json=screenshot1,proto3" json:"screenshot_1,omitempty"`
	Logo         string   `protobuf:"bytes,11,opt,name=logo,proto3" json:"logo,omitempty"`
	FcKind       uint32   `protobuf:"varint,12,opt,name=fc_kind,json=fcKind,proto3" json:"fc_kind,omitempty"`
	StoreFront   uint32   `protobuf:"varint,13,opt,name=store_front,json=storeFront,proto3" json:"store_front,omitempty"`
	LanguageId   uint32   `protobuf:"varint,14,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
}

func (x *AppStoreRoomReply) Reset() {
	*x = AppStoreRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppStoreRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppStoreRoomReply) ProtoMessage() {}

func (x *AppStoreRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppStoreRoomReply.ProtoReflect.Descriptor instead.
func (*AppStoreRoomReply) Descriptor() ([]byte, []int) {
	return file_scraper_proto_rawDescGZIP(), []int{3}
}

func (x *AppStoreRoomReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AppStoreRoomReply) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AppStoreRoomReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppStoreRoomReply) GetContentIds() []uint32 {
	if x != nil {
		return x.ContentIds
	}
	return nil
}

func (x *AppStoreRoomReply) GetArtistName() string {
	if x != nil {
		return x.ArtistName
	}
	return ""
}

func (x *AppStoreRoomReply) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AppStoreRoomReply) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *AppStoreRoomReply) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *AppStoreRoomReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppStoreRoomReply) GetScreenshot_1() string {
	if x != nil {
		return x.Screenshot_1
	}
	return ""
}

func (x *AppStoreRoomReply) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *AppStoreRoomReply) GetFcKind() uint32 {
	if x != nil {
		return x.FcKind
	}
	return 0
}

func (x *AppStoreRoomReply) GetStoreFront() uint32 {
	if x != nil {
		return x.StoreFront
	}
	return 0
}

func (x *AppStoreRoomReply) GetLanguageId() uint32 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

type GooglePlayAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName   string `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	GeoLocation   string `protobuf:"bytes,2,opt,name=geo_location,json=geoLocation,proto3" json:"geo_location,omitempty"`
	HumanLanguage string `protobuf:"bytes,3,opt,name=human_language,json=humanLanguage,proto3" json:"human_language,omitempty"`
}

func (x *GooglePlayAppRequest) Reset() {
	*x = GooglePlayAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GooglePlayAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GooglePlayAppRequest) ProtoMessage() {}

func (x *GooglePlayAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GooglePlayAppRequest.ProtoReflect.Descriptor instead.
func (*GooglePlayAppRequest) Descriptor() ([]byte, []int) {
	return file_scraper_proto_rawDescGZIP(), []int{4}
}

func (x *GooglePlayAppRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *GooglePlayAppRequest) GetGeoLocation() string {
	if x != nil {
		return x.GeoLocation
	}
	return ""
}

func (x *GooglePlayAppRequest) GetHumanLanguage() string {
	if x != nil {
		return x.HumanLanguage
	}
	return ""
}

type GooglePlayAppReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Link         string  `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	PackageName  string  `protobuf:"bytes,3,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	ArtistName   string  `protobuf:"bytes,4,opt,name=artist_name,json=artistName,proto3" json:"artist_name,omitempty"`
	Rating       float32 `protobuf:"fixed32,5,opt,name=rating,proto3" json:"rating,omitempty"`
	StarsCount   int32   `protobuf:"varint,6,opt,name=stars_count,json=starsCount,proto3" json:"stars_count,omitempty"`
	Stars_1Count int32   `protobuf:"varint,7,opt,name=stars_1_count,json=stars1Count,proto3" json:"stars_1_count,omitempty"`
	Stars_2Count int32   `protobuf:"varint,8,opt,name=stars_2_count,json=stars2Count,proto3" json:"stars_2_count,omitempty"`
	Stars_3Count int32   `protobuf:"varint,9,opt,name=stars_3_count,json=stars3Count,proto3" json:"stars_3_count,omitempty"`
	Stars_4Count int32   `protobuf:"varint,10,opt,name=stars_4_count,json=stars4Count,proto3" json:"stars_4_count,omitempty"`
	Stars_5Count int32   `protobuf:"varint,11,opt,name=stars_5_count,json=stars5Count,proto3" json:"stars_5_count,omitempty"`
	ReleaseDate  string  `protobuf:"bytes,12,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Subtitle     string  `protobuf:"bytes,13,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Description  string  `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	Screenshot1  string  `protobuf:"bytes,15,opt,name=screenshot1,proto3" json:"screenshot1,omitempty"`
	Logo         string  `protobuf:"bytes,16,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *GooglePlayAppReply) Reset() {
	*x = GooglePlayAppReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GooglePlayAppReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GooglePlayAppReply) ProtoMessage() {}

func (x *GooglePlayAppReply) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GooglePlayAppReply.ProtoReflect.Descriptor instead.
func (*GooglePlayAppReply) Descriptor() ([]byte, []int) {
	return file_scraper_proto_rawDescGZIP(), []int{5}
}

func (x *GooglePlayAppReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GooglePlayAppReply) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GooglePlayAppReply) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *GooglePlayAppReply) GetArtistName() string {
	if x != nil {
		return x.ArtistName
	}
	return ""
}

func (x *GooglePlayAppReply) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *GooglePlayAppReply) GetStarsCount() int32 {
	if x != nil {
		return x.StarsCount
	}
	return 0
}

func (x *GooglePlayAppReply) GetStars_1Count() int32 {
	if x != nil {
		return x.Stars_1Count
	}
	return 0
}

func (x *GooglePlayAppReply) GetStars_2Count() int32 {
	if x != nil {
		return x.Stars_2Count
	}
	return 0
}

func (x *GooglePlayAppReply) GetStars_3Count() int32 {
	if x != nil {
		return x.Stars_3Count
	}
	return 0
}

func (x *GooglePlayAppReply) GetStars_4Count() int32 {
	if x != nil {
		return x.Stars_4Count
	}
	return 0
}

func (x *GooglePlayAppReply) GetStars_5Count() int32 {
	if x != nil {
		return x.Stars_5Count
	}
	return 0
}

func (x *GooglePlayAppReply) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *GooglePlayAppReply) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *GooglePlayAppReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GooglePlayAppReply) GetScreenshot1() string {
	if x != nil {
		return x.Screenshot1
	}
	return ""
}

func (x *GooglePlayAppReply) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

var File_scraper_proto protoreflect.FileDescriptor

var file_scraper_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x22, 0x1d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x1b, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6f, 0x6b, 0x22, 0x64, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x03, 0x0a, 0x11, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x63, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66,
	0x63, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x65, 0x6f, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x68, 0x75, 0x6d, 0x61, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x86, 0x04,
	0x0a, 0x12, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x73, 0x5f, 0x31, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x73, 0x31, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x73, 0x5f, 0x32, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x73, 0x32, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x73, 0x5f, 0x33, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x73, 0x33, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x73,
	0x5f, 0x34, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x73, 0x34, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x73, 0x5f, 0x35, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x73, 0x35, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x31, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f,
	0x74, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x32, 0xd8, 0x01, 0x0a, 0x07, 0x53, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x41, 0x70, 0x70, 0x12, 0x1d, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x61, 0x6c, 0x61, 0x6c, 0x65, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scraper_proto_rawDescOnce sync.Once
	file_scraper_proto_rawDescData = file_scraper_proto_rawDesc
)

func file_scraper_proto_rawDescGZIP() []byte {
	file_scraper_proto_rawDescOnce.Do(func() {
		file_scraper_proto_rawDescData = protoimpl.X.CompressGZIP(file_scraper_proto_rawDescData)
	})
	return file_scraper_proto_rawDescData
}

var file_scraper_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_scraper_proto_goTypes = []interface{}{
	(*PingRequest)(nil),          // 0: scraper.PingRequest
	(*PingReply)(nil),            // 1: scraper.PingReply
	(*AppStoreRoomRequest)(nil),  // 2: scraper.AppStoreRoomRequest
	(*AppStoreRoomReply)(nil),    // 3: scraper.AppStoreRoomReply
	(*GooglePlayAppRequest)(nil), // 4: scraper.GooglePlayAppRequest
	(*GooglePlayAppReply)(nil),   // 5: scraper.GooglePlayAppReply
}
var file_scraper_proto_depIdxs = []int32{
	0, // 0: scraper.Scraper.Ping:input_type -> scraper.PingRequest
	2, // 1: scraper.Scraper.AppStoreRoom:input_type -> scraper.AppStoreRoomRequest
	4, // 2: scraper.Scraper.GooglePlayApp:input_type -> scraper.GooglePlayAppRequest
	1, // 3: scraper.Scraper.Ping:output_type -> scraper.PingReply
	3, // 4: scraper.Scraper.AppStoreRoom:output_type -> scraper.AppStoreRoomReply
	5, // 5: scraper.Scraper.GooglePlayApp:output_type -> scraper.GooglePlayAppReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_scraper_proto_init() }
func file_scraper_proto_init() {
	if File_scraper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scraper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppStoreRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppStoreRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GooglePlayAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GooglePlayAppReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scraper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scraper_proto_goTypes,
		DependencyIndexes: file_scraper_proto_depIdxs,
		MessageInfos:      file_scraper_proto_msgTypes,
	}.Build()
	File_scraper_proto = out.File
	file_scraper_proto_rawDesc = nil
	file_scraper_proto_goTypes = nil
	file_scraper_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ScraperClient is the client API for Scraper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScraperClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	AppStoreRoom(ctx context.Context, in *AppStoreRoomRequest, opts ...grpc.CallOption) (*AppStoreRoomReply, error)
	GooglePlayApp(ctx context.Context, in *GooglePlayAppRequest, opts ...grpc.CallOption) (*GooglePlayAppReply, error)
}

type scraperClient struct {
	cc grpc.ClientConnInterface
}

func NewScraperClient(cc grpc.ClientConnInterface) ScraperClient {
	return &scraperClient{cc}
}

func (c *scraperClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/scraper.Scraper/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scraperClient) AppStoreRoom(ctx context.Context, in *AppStoreRoomRequest, opts ...grpc.CallOption) (*AppStoreRoomReply, error) {
	out := new(AppStoreRoomReply)
	err := c.cc.Invoke(ctx, "/scraper.Scraper/AppStoreRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scraperClient) GooglePlayApp(ctx context.Context, in *GooglePlayAppRequest, opts ...grpc.CallOption) (*GooglePlayAppReply, error) {
	out := new(GooglePlayAppReply)
	err := c.cc.Invoke(ctx, "/scraper.Scraper/GooglePlayApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScraperServer is the server API for Scraper service.
type ScraperServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
	AppStoreRoom(context.Context, *AppStoreRoomRequest) (*AppStoreRoomReply, error)
	GooglePlayApp(context.Context, *GooglePlayAppRequest) (*GooglePlayAppReply, error)
}

// UnimplementedScraperServer can be embedded to have forward compatible implementations.
type UnimplementedScraperServer struct {
}

func (*UnimplementedScraperServer) Ping(context.Context, *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedScraperServer) AppStoreRoom(context.Context, *AppStoreRoomRequest) (*AppStoreRoomReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppStoreRoom not implemented")
}
func (*UnimplementedScraperServer) GooglePlayApp(context.Context, *GooglePlayAppRequest) (*GooglePlayAppReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GooglePlayApp not implemented")
}

func RegisterScraperServer(s *grpc.Server, srv ScraperServer) {
	s.RegisterService(&_Scraper_serviceDesc, srv)
}

func _Scraper_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScraperServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scraper.Scraper/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScraperServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scraper_AppStoreRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppStoreRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScraperServer).AppStoreRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scraper.Scraper/AppStoreRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScraperServer).AppStoreRoom(ctx, req.(*AppStoreRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scraper_GooglePlayApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GooglePlayAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScraperServer).GooglePlayApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scraper.Scraper/GooglePlayApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScraperServer).GooglePlayApp(ctx, req.(*GooglePlayAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scraper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scraper.Scraper",
	HandlerType: (*ScraperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Scraper_Ping_Handler,
		},
		{
			MethodName: "AppStoreRoom",
			Handler:    _Scraper_AppStoreRoom_Handler,
		},
		{
			MethodName: "GooglePlayApp",
			Handler:    _Scraper_GooglePlayApp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scraper.proto",
}
